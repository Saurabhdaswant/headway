import Head from "next/head";
import { HabitsContext } from "../Providers/HabitsProvider";

import { startOfToday, sub } from "date-fns";

import React, { useContext, useEffect, useState } from "react";
import { colors, weekDays } from "../components/constants";
import HabitForm from "../components/HabitForm";
import { LogoutIcon } from "@heroicons/react/outline";
import { API_ENDPOINTS } from "../constants";
import { AnimatePresence } from "framer-motion";
import Image from "next/image";

const Header = ({ setShowHabitForm }) => {
  return (
    <div className="flex flex-col md:flex-row gap-y-4 justify-between md:items-end">
      <p className="text-3xl font-bold text-[#2e2e2e]">Goals</p>
      <div className="flex justify-between md:justify-normal   items-end gap-3">
        <div className="flex gap-3">
          <button
            onClick={() => setShowHabitForm(true)}
            className={`flex justify-between items-center gap-2 font-medium   bg-[#0F85F2] px-4 py-2.5 rounded-full text-white disabled:cursor-not-allowed`}
          >
            <p>Add Goal</p>
          </button>
          <div>
            <button
              className="p-3 bg-white rounded-full text-gray-600 "
              onClick={() => {
                localStorage.removeItem("authToken");
                window.location.href = "/";
              }}
            >
              <LogoutIcon className=" w-6" />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

function Goals() {
  const { habits, updateHabits } = useContext(HabitsContext);
  const [showHabitForm, setShowHabitForm] = useState(false);
  const today = startOfToday();
  const [error, setError] = useState(false);
  const [token, setToken] = useState(null);

  useEffect(() => {
    if (typeof window !== "undefined") {
      const token = window.localStorage.getItem("authToken");

      if (!token) {
        window.location.href = "/login";
      }

      setToken(token);
    }
  }, []);

  const dateWhichIsBeforeCurrDate = sub(today, {
    days: 5,
  });

  // use this if needed instead of today! 👆🏽

  const newHabit = {
    name: "",
    getDoneIn: "anytime",
    color: "",
    completedOnDates: [],
    createdDate: today,
    repeatHabitDays: weekDays,
  };

  const handleCreateHabit = async (habit) => {
    if (habit.name.trim().length === 0) {
      setError(true);
      return;
    } else {
      setError(false);

      if (habit.color === "") {
        const randomColor = colors[Math.floor(Math.random() * colors.length)];
        habit.color = randomColor;
      }

      if (habit.getDoneIn === "") {
        habit.getDoneIn = "anytime";
      }

      const res = await fetch(`${API_ENDPOINTS.BASE_URL}/newHabit`, {
        method: "POST",
        body: JSON.stringify({ habit: habit }),
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
      });
      const habitWithId = await res.json();

      const newHabits = [...(habits || []), habitWithId];

      updateHabits(newHabits);
      setShowHabitForm(false);
    }
  };

  return (
    <div className="flex h-screen bg-[#F5F5F5] relative overflow-hidden">
      <Head>
        <title>HabitTracker | Habstrack</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/habstrack.svg" />
      </Head>
      <div className=" mx-auto w-full max-w-[90%]  md:max-w-[95%]  2xl:max-w-[70%] flex justify-between py-4 lg:py-8     lg:gap-8   ">
        <main className=" mx-auto w-full max-w-xl lg:max-w-[60%] ">
          <Header setShowHabitForm={setShowHabitForm} />
          <div className=" grid md:grid-cols-2  mt-8 gap-4 items-start scrollbar-hide h-[70vh]  pb-10   overflow-auto ">
            {habits?.map((habit, _) => {
              return (
                <>
                  <div
                    className={` hover:cursor-pointer group   rounded-xl  w-full mx-auto flex justify-between items-center text-[#2e2e2e]  bg-white  border border-slate-100`}
                  >
                    <div className="space-y-3  py-3  w-full ">
                      <div className="  border-b  border-gray-100  px-3">
                        {/* <p className="pb-1">💼</p> */}
                        <p className=" font-semibold text-xl capitalize pb-1.5  ">
                          {" "}
                          {habit.name}
                        </p>
                        <p className=" text-sm font-medium  pb-3  text-[#2e2e2e9d]  ">
                          Dream of launching a venture that not only generates
                          profit but also benefits the environment. Research
                          eco-freiendlyl...
                        </p>

                        <div className="flex justify-between items-center">
                          <div>
                            <p
                              className={`text-xs    capitalize    rounded-full    text-gray-500 `}
                            >
                              deadline date
                            </p>
                            <p
                              className={`text-sm py-1  pb-3  capitalize  font-medium    rounded-full    text-gray-900 `}
                            >
                              25 / 05 / 24
                            </p>
                          </div>
                          <div>
                            <p
                              className={`text-xs    capitalize    rounded-full    text-gray-500 `}
                            >
                              time left
                            </p>
                            <p
                              className={`text-sm py-1  pb-3  capitalize font-medium    rounded-full    text-gray-900 `}
                            >
                              25 Days
                            </p>
                          </div>
                        </div>
                        <div className=" w-full gap-2">
                          <Image
                            src={
                              "https://plus.unsplash.com/premium_photo-1661954372617-15780178eb2e?q=80&w=2920&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                            }
                            width="1000"
                            height="1000"
                            className=" w-full rounded-lg border-white  "
                            alt="headay's habit tracker img"
                          />
                          {/* <Image
                            src={habstrack}
                            width="200"
                            className=" rounded-lg border-white  "
                            alt="headay's habit tracker img"
                          /> */}
                        </div>
                      </div>
                    </div>
                  </div>
                  {/* <AnimatePresence>
                    {showHabitForm && (
                      <HabitForm
                        formTitle="Edit Habit"
                        habit={currHabit}
                        setShowHabitForm={setShowHabitForm}
                        handleSubmit={handleEditHabit}
                        error={error}
                      />
                    )}
                  </AnimatePresence>
                  <AnimatePresence>
                    {showDeleteDialog && (
                      <DeleteHabit
                        habitId={currHabit._id}
                        toggleDeleteDialog={toggleDeleteDialog}
                      />
                    )}
                  </AnimatePresence>

                  <AnimatePresence>
                    {showStats && (
                      <HabitStats habit={currHabit} toggleStats={toggleStats} />
                    )}
                  </AnimatePresence> */}
                </>
              );
            })}
          </div>
        </main>
        <AnimatePresence>
          {showHabitForm ? (
            <HabitForm
              formTitle="Add New Habit"
              habit={newHabit}
              setShowHabitForm={setShowHabitForm}
              handleSubmit={handleCreateHabit}
              error={error}
            />
          ) : null}
        </AnimatePresence>
      </div>
    </div>
  );
}

export default Goals;
